{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import NoteContext from\"./NoteContext\";import{jsx as _jsx}from\"react/jsx-runtime\";const NoteState=props=>{const host=\"https://inotebook-backend-2-8kpe.onrender.com\";const[notes,setNotes]=useState([]);const[isAuthenticated,setIsAuthenticated]=useState(false);const[name,setName]=useState(null);// Check for token and set authentication state\nuseEffect(()=>{const token=localStorage.getItem('token');if(token){setIsAuthenticated(true);getuser(token);// Fetch user data if authenticated\n}},[]);// Get notes\nconst getNote=async token=>{const response=await fetch(\"\".concat(host,\"/api/notes/fetchallnotes\"),{method:'GET',headers:{'Content-Type':'application/json','Auth':token}});const json=await response.json();setNotes(json);};// Add a note\nconst addNote=async(title,description,tag)=>{const token=localStorage.getItem('token');const response=await fetch(\"\".concat(host,\"/api/notes/addnote\"),{method:'POST',headers:{'Content-Type':'application/json','Auth':token},body:JSON.stringify({title,description,tag})});const json=await response.json();setNotes(prevNotes=>[...prevNotes,json]);};// Delete a note\nconst deleteNote=async id=>{const token=localStorage.getItem('token');await fetch(\"\".concat(host,\"/api/notes/deletenote/\").concat(id),{method:'DELETE',headers:{'Content-Type':'application/json','Auth':token}});setNotes(notes.filter(note=>note._id!==id));};// Edit a note\nconst editNote=async(id,title,description,tag)=>{const token=localStorage.getItem('token');const response=await fetch(\"\".concat(host,\"/api/notes/updateNotes/\").concat(id),{method:'PUT',headers:{'Content-Type':'application/json','Auth':token},body:JSON.stringify({title,description,tag})});const json=await response.json();// Update the note in the local state\nconst newNotes=notes.map(note=>note._id===id?json:note);setNotes(newNotes);};// Get user\nconst getuser=async token=>{const response=await fetch(\"\".concat(host,\"/api/auth/getuser\"),{method:'POST',headers:{'Content-Type':'application/json','Auth':token}});const json=await response.json();setName(json.name);};return/*#__PURE__*/_jsx(NoteContext.Provider,{value:{notes,addNote,deleteNote,editNote,getNote,isAuthenticated,getuser,name,setIsAuthenticated},children:props.children});};export default NoteState;","map":{"version":3,"names":["React","useState","useEffect","NoteContext","jsx","_jsx","NoteState","props","host","notes","setNotes","isAuthenticated","setIsAuthenticated","name","setName","token","localStorage","getItem","getuser","getNote","response","fetch","concat","method","headers","json","addNote","title","description","tag","body","JSON","stringify","prevNotes","deleteNote","id","filter","note","_id","editNote","newNotes","map","Provider","value","children"],"sources":["D:/learn-react-03/inotebook/src/context/notes/NoteState.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport NoteContext from \"./NoteContext\";\r\n\r\nconst NoteState = (props) => {\r\n  const host = \"https://inotebook-backend-2-8kpe.onrender.com\";\r\n  const [notes, setNotes] = useState([]);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [name, setName] = useState(null);\r\n\r\n  // Check for token and set authentication state\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      setIsAuthenticated(true);\r\n      getuser(token); // Fetch user data if authenticated\r\n    }\r\n  }, []);\r\n\r\n  // Get notes\r\n  const getNote = async (token) => {\r\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Auth': token\r\n      }\r\n    });\r\n    const json = await response.json();\r\n    setNotes(json);\r\n  };\r\n\r\n  // Add a note\r\n  const addNote = async (title, description, tag) => {\r\n    const token = localStorage.getItem('token');\r\n    const response = await fetch(`${host}/api/notes/addnote`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Auth': token\r\n      },\r\n      body: JSON.stringify({ title, description, tag })\r\n    });\r\n    const json = await response.json();\r\n    setNotes((prevNotes) => [...prevNotes, json]);\r\n  };\r\n\r\n  // Delete a note\r\n  const deleteNote = async (id) => {\r\n    const token = localStorage.getItem('token');\r\n    await fetch(`${host}/api/notes/deletenote/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Auth': token\r\n      }\r\n    });\r\n    setNotes(notes.filter(note => note._id !== id));\r\n  };\r\n\r\n  // Edit a note\r\n  const editNote = async (id, title, description, tag) => {\r\n    const token = localStorage.getItem('token');\r\n    const response = await fetch(`${host}/api/notes/updateNotes/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Auth': token\r\n      },\r\n      body: JSON.stringify({ title, description, tag })\r\n    });\r\n    const json = await response.json();\r\n\r\n    // Update the note in the local state\r\n    const newNotes = notes.map((note) => (note._id === id ? json : note));\r\n    setNotes(newNotes);\r\n  };\r\n\r\n  // Get user\r\n  const getuser = async (token) => {\r\n    const response = await fetch(`${host}/api/auth/getuser`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Auth': token\r\n      }\r\n    });\r\n    const json = await response.json();\r\n    setName(json.name);\r\n  };\r\n\r\n  return (\r\n    <NoteContext.Provider value={{ notes, addNote, deleteNote, editNote, getNote, isAuthenticated, getuser, name,setIsAuthenticated }}>\r\n      {props.children}\r\n    </NoteContext.Provider>\r\n  );\r\n};\r\n\r\nexport default NoteState;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}