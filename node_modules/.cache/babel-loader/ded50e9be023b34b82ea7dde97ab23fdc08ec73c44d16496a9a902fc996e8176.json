{"ast":null,"code":"var _jsxFileName = \"D:\\\\learn-react-03\\\\inotebook\\\\src\\\\context\\\\notes\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport NoteContext from \"./NoteContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const host = \"http://localhost:5000\";\n  const noteInitial = [];\n  const [notes, setNotes] = useState(noteInitial);\n\n  //get notes \n  const getNote = async (title, description, tag) => {\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY0OGI4MThjZGQxZTViODk2ZGE2OTUwIn0sImlhdCI6MTcxNjA0Nzk0MH0.POTBGaZlIG4FxHU2XHtxXaeRg5Az3LZpdN5XupHUArE'\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n    setNotes(json);\n  };\n\n  //add a note \n  const addNote = async (title, description, tag) => {\n    const response = await fetch(`${host}/api/notes/addnote`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY0OGI4MThjZGQxZTViODk2ZGE2OTUwIn0sImlhdCI6MTcxNjA0Nzk0MH0.POTBGaZlIG4FxHU2XHtxXaeRg5Az3LZpdN5XupHUArE'\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const jsondata = await response.json();\n    //to do api call\n\n    setNotes(notes.push(jsondata));\n  };\n\n  // delete a note\n  const DeleteNote = id => {\n    //to do api call\n    console.log(\"deleting note \" + id);\n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  };\n\n  //edit a note\n  const EditNote = async (id, title, description, tag) => {\n    //to do api call\n\n    const response = await fetch(`${host}}/api/notes/updateNotes/${id}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY0OGI4MThjZGQxZTViODk2ZGE2OTUwIn0sImlhdCI6MTcxNjA0Nzk0MH0.POTBGaZlIG4FxHU2XHtxXaeRg5Az3LZpdN5XupHUArE'\n      },\n      body: JSON.stringify(title, description, tag)\n    });\n    const json = response.json();\n    for (let i = 0; i < notes.length; i++) {\n      const element = notes[i];\n      if (element._id === id) {\n        element.title = title;\n        element.description = description;\n        element.tag = tag;\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      addNote,\n      DeleteNote,\n      EditNote,\n      getNote\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n_s(NoteState, \"pcVdPYDVwUcMl5Et4QogS+VfQzM=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["React","useState","NoteContext","jsxDEV","_jsxDEV","NoteState","props","_s","host","noteInitial","notes","setNotes","getNote","title","description","tag","response","fetch","method","headers","json","console","log","addNote","body","JSON","stringify","jsondata","push","DeleteNote","id","newNotes","filter","note","_id","EditNote","i","length","element","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/learn-react-03/inotebook/src/context/notes/NoteState.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport NoteContext from \"./NoteContext\";\r\n\r\nconst NoteState = (props)=>{\r\n\r\n  const host = \"http://localhost:5000\"\r\n    const noteInitial = [\r\n       \r\n      ]\r\n     const[notes,setNotes]= useState(noteInitial)  \r\n\r\n     //get notes \r\n     const getNote=async(title,description,tag)=>{\r\n\r\n\r\n      const response = await fetch(`${host}/api/notes/fetchallnotes`,{\r\n        method:'GET',\r\n        headers:{\r\n          'Content-Type':'application/json',\r\n          'Auth':'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY0OGI4MThjZGQxZTViODk2ZGE2OTUwIn0sImlhdCI6MTcxNjA0Nzk0MH0.POTBGaZlIG4FxHU2XHtxXaeRg5Az3LZpdN5XupHUArE'\r\n        }\r\n      \r\n       }\r\n       \r\n       )\r\n       const json = await response.json();\r\n        console.log(json)\r\n        setNotes(json)\r\n     }\r\n\r\n     //add a note \r\n     const addNote=async(title,description,tag)=>{\r\n\r\n\r\n      const response = await fetch(`${host}/api/notes/addnote`,{\r\n        method:'POST',\r\n        headers:{\r\n          'Content-Type':'application/json',\r\n          'Auth':'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY0OGI4MThjZGQxZTViODk2ZGE2OTUwIn0sImlhdCI6MTcxNjA0Nzk0MH0.POTBGaZlIG4FxHU2XHtxXaeRg5Az3LZpdN5XupHUArE'\r\n        },\r\n        body:JSON.stringify({title,description,tag}),\r\n       \r\n      \r\n       }\r\n       \r\n       )\r\n       const jsondata = await response.json();\r\n      //to do api call\r\n    \r\n      setNotes(notes.push(jsondata))\r\n     }\r\n\r\n    // delete a note\r\n    const DeleteNote=(id)=>{\r\n\r\n         //to do api call\r\n      console.log(\"deleting note \" + id)\r\n      const newNotes = notes.filter((note)=>{return note._id!==id})\r\n      setNotes(newNotes)\r\n      \r\n\r\n    }\r\n\r\n\r\n    //edit a note\r\n    const EditNote=async(id,title,description,tag)=>{\r\n   //to do api call\r\n   \r\n   const response = await fetch(`${host}}/api/notes/updateNotes/${id}`,{\r\n    method:'POST',\r\n    headers:{\r\n      'Content-Type':'application/json',\r\n      'Auth':'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY0OGI4MThjZGQxZTViODk2ZGE2OTUwIn0sImlhdCI6MTcxNjA0Nzk0MH0.POTBGaZlIG4FxHU2XHtxXaeRg5Az3LZpdN5XupHUArE'\r\n    },\r\n    body:JSON.stringify(title,description,tag)\r\n  \r\n   }\r\n   \r\n   )\r\n   const json = response.json();\r\n\r\n\r\n\r\n      for (let i = 0; i < notes.length;i++){\r\n        const element = notes[i]\r\n        if(element._id === id){\r\n          element.title = title\r\n          element.description = description\r\n          element.tag= tag\r\n        }\r\n      }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <NoteContext.Provider value={{notes,addNote,DeleteNote,EditNote,getNote}}>\r\n            {props.children}\r\n        </NoteContext.Provider>\r\n    )\r\n}\r\n\r\nexport default NoteState;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}