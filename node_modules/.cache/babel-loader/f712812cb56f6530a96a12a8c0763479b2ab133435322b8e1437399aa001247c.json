{"ast":null,"code":"var _jsxFileName = \"D:\\\\learn-react-03\\\\inotebook\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [credential, setCredential] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const handleClick = async e => {\n    e.preventDefault();\n    const host = \"http://localhost:5000\";\n    const response = await fetch(`${host}/api/auth/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const json = await response.json();\n  };\n  const onChange = e => {\n    setCredential({\n      ...credential,\n      [e.target.name]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-2 my-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"exampleFormControlInput1\",\n        className: \"form-label\",\n        children: \"Email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"form-control\",\n        id: \"exampleFormControlInput1\",\n        name: \"email\",\n        value: credential.email,\n        placeholder: \"name@example.com\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"inputPassword5\",\n      className: \"form-label\",\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      id: \"inputPassword5\",\n      name: \"password\",\n      className: \"form-control\",\n      value: credential.password,\n      \"aria-describedby\": \"passwordHelpBlock\",\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"passwordHelpBlock\",\n      className: \"form-text\",\n      children: \"Your password must be 8-20 characters long, contain letters and numbers, and must not contain spaces, special characters, or emoji.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-info\",\n      onClick: handleClick,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"0T08e+xNuowv4Fc2N8O+JglR4gw=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","credential","setCredential","email","password","handleClick","e","preventDefault","host","response","fetch","method","headers","body","JSON","stringify","json","onChange","target","name","value","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/learn-react-03/inotebook/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst Login = () => {\r\n    const [credential,setCredential] = useState({email:\"\",password:\"\"})\r\n\r\n\r\n    const handleClick = async (e) =>{\r\n        e.preventDefault();\r\n        const host = \"http://localhost:5000\";\r\n        const response = await fetch(`${host}/api/auth/login`, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n\r\n            },\r\n            body: JSON.stringify({email,password })\r\n          });\r\n          const json = await response.json();\r\n\r\n\r\n\r\n    }\r\n    const onChange = (e) => {\r\n        setCredential({ ...credential, [e.target.name]: e.target.value });\r\n    };\r\n  return (\r\n    <div className=\"container mx-2 my-2\">\r\n     <div className=\"mb-3\">\r\n  <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">Email address</label>\r\n  <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" name=\"email\" value={credential.email} placeholder=\"name@example.com\" onChange={onChange}/>\r\n\r\n</div>\r\n<label htmlFor=\"inputPassword5\" className=\"form-label\">Password</label>\r\n<input type=\"password\" id=\"inputPassword5\"  name=\"password\" className=\"form-control\" value={credential.password} aria-describedby=\"passwordHelpBlock\" onChange={onChange}/>\r\n<div id=\"passwordHelpBlock\" className=\"form-text\">\r\n  Your password must be 8-20 characters long, contain letters and numbers, and must not contain spaces, special characters, or emoji.\r\n</div>\r\n<button type=\"button\" className=\"btn btn-info\" onClick={handleClick}>Submit</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}