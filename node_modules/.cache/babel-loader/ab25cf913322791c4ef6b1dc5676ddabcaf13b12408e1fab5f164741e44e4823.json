{"ast":null,"code":"var _jsxFileName = \"D:\\\\learn-react-03\\\\inotebook\\\\src\\\\context\\\\notes\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport NoteContext from \"./NoteContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const host = \"http://localhost:5000\";\n  const [notes, setNotes] = useState([]);\n\n  // Get notes\n  const getNote = async () => {\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY0OGI4MThjZGQxZTViODk2ZGE2OTUwIn0sImlhdCI6MTcxNjA0Nzk0MH0.POTBGaZlIG4FxHU2XHtxXaeRg5Az3LZpdN5XupHUArE'\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n    setNotes(json);\n  };\n\n  // Add a note\n  const addNote = async (title, description, tag) => {\n    const response = await fetch(`${host}/api/notes/addnote`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY0OGI4MThjZGQxZTViODk2ZGE2OTUwIn0sImlhdCI6MTcxNjA0Nzk0MH0.POTBGaZlIG4FxHU2XHtxXaeRg5Az3LZpdN5XupHUArE'\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const jsondata = await response.json();\n    setNotes(notes.concat(jsondata));\n  };\n\n  // Delete a note\n  const deleteNote = async id => {\n    // Add API call to delete the note from the server\n    await fetch(`${host}/api/notes/deletenote/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY0OGI4MThjZGQxZTViODk2ZGE2OTUwIn0sImlhdCI6MTcxNjA0Nzk0MH0.POTBGaZlIG4FxHU2XHtxXaeRg5Az3LZpdN5XupHUArE'\n      }\n    });\n    const newNotes = notes.filter(note => note._id !== id);\n    setNotes(newNotes);\n  };\n\n  // Edit a note\n  const editNote = async (id, title, description, tag) => {\n    const response = await fetch(`${host}/api/notes/updateNotes/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY0OGI4MThjZGQxZTViODk2ZGE2OTUwIn0sImlhdCI6MTcxNjA0Nzk0MH0.POTBGaZlIG4FxHU2XHtxXaeRg5Az3LZpdN5XupHUArE'\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = await response.json();\n\n    // Update the note in the local state\n    const newNotes = notes.map(note => note._id === id ? json : note);\n    setNotes(newNotes);\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      addNote,\n      deleteNote,\n      editNote,\n      getNote\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteState, \"GQLmJKrKSWtt27ULSmYSMpXke/c=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["React","useState","NoteContext","jsxDEV","_jsxDEV","NoteState","props","_s","host","notes","setNotes","getNote","response","fetch","method","headers","json","console","log","addNote","title","description","tag","body","JSON","stringify","jsondata","concat","deleteNote","id","newNotes","filter","note","_id","editNote","map","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/learn-react-03/inotebook/src/context/notes/NoteState.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport NoteContext from \"./NoteContext\";\r\n\r\nconst NoteState = (props) => {\r\n  const host = \"http://localhost:5000\";\r\n  const [notes, setNotes] = useState([]);\r\n\r\n  // Get notes\r\n  const getNote = async () => {\r\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Auth': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY0OGI4MThjZGQxZTViODk2ZGE2OTUwIn0sImlhdCI6MTcxNjA0Nzk0MH0.POTBGaZlIG4FxHU2XHtxXaeRg5Az3LZpdN5XupHUArE'\r\n      }\r\n    });\r\n    const json = await response.json();\r\n    console.log(json);\r\n    setNotes(json);\r\n  };\r\n\r\n  // Add a note\r\n  const addNote = async (title, description, tag) => {\r\n    const response = await fetch(`${host}/api/notes/addnote`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Auth': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY0OGI4MThjZGQxZTViODk2ZGE2OTUwIn0sImlhdCI6MTcxNjA0Nzk0MH0.POTBGaZlIG4FxHU2XHtxXaeRg5Az3LZpdN5XupHUArE'\r\n      },\r\n      body: JSON.stringify({ title, description, tag })\r\n    });\r\n    const jsondata = await response.json();\r\n    setNotes(notes.concat(jsondata));\r\n  };\r\n\r\n  // Delete a note\r\n  const deleteNote = async (id) => {\r\n    // Add API call to delete the note from the server\r\n    await fetch(`${host}/api/notes/deletenote/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Auth': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY0OGI4MThjZGQxZTViODk2ZGE2OTUwIn0sImlhdCI6MTcxNjA0Nzk0MH0.POTBGaZlIG4FxHU2XHtxXaeRg5Az3LZpdN5XupHUArE'\r\n      }\r\n    });\r\n    const newNotes = notes.filter((note) => note._id !== id);\r\n    setNotes(newNotes);\r\n  };\r\n\r\n  // Edit a note\r\n  const editNote = async (id, title, description, tag) => {\r\n    const response = await fetch(`${host}/api/notes/updateNotes/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Auth': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjY0OGI4MThjZGQxZTViODk2ZGE2OTUwIn0sImlhdCI6MTcxNjA0Nzk0MH0.POTBGaZlIG4FxHU2XHtxXaeRg5Az3LZpdN5XupHUArE'\r\n       \r\n      },\r\n      body: JSON.stringify({ title, description, tag })\r\n    });\r\n    const json = await response.json();\r\n\r\n    // Update the note in the local state\r\n    const newNotes = notes.map(note => note._id === id ? json : note);\r\n    setNotes(newNotes);\r\n  };\r\n\r\n  return (\r\n    <NoteContext.Provider value={{ notes, addNote, deleteNote, editNote, getNote }}>\r\n      {props.children}\r\n    </NoteContext.Provider>\r\n  );\r\n};\r\n\r\nexport default NoteState;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}